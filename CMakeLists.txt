cmake_minimum_required(VERSION 3.14)
set(libname xc)

project(project_${libname} C)

message(STATUS "CMAKE_BUILD_TYPE=" ${CMAKE_BUILD_TYPE})
message(STATUS "CMAKE_SYSTEM_NAME=" ${CMAKE_SYSTEM_NAME})

if (CMAKE_C_COMPILER_ID STREQUAL "MSVC")
	add_compile_options("-D_WIN32_WINNT=0x0601")
	add_compile_options("-D_CRT_SECURE_NO_WARNINGS")
	add_compile_options("-MP")
	add_compile_options("-std:c11")
	add_compile_options("-std:c++latest")
	if (CMAKE_BUILD_TYPE STREQUAL "Release")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
	endif()
	set(cpp Threads::Threads)
else()
	set(CMAKE_C_STANDARD 11)

	if (CMAKE_C_COMPILER_ID STREQUAL "GNU")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
	elseif (CMAKE_C_COMPILER_ID STREQUAL "Clang")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
	elseif (CMAKE_C_COMPILER_ID STREQUAL "AppleClang")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
	endif()
endif()

if (CMAKE_SYSTEM_NAME MATCHES "MSYS")
	if (CMAKE_BUILD_TYPE STREQUAL "Debug")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mconsole")
	endif()
	include_directories("/mingw64/include/")
	link_directories("/mingw64/lib/")
elseif(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	include_directories("/usr/local/include/")
	link_directories("/usr/local/lib/")
endif()


if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
	if (CMAKE_C_COMPILER_ID STREQUAL "MSVC")
		set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/.local" CACHE PATH "..." FORCE)
	else()
		set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/.local" CACHE PATH "..." FORCE)
	endif()
endif()

set(LIBRARY_OUTPUT_PATH                        "${PROJECT_BINARY_DIR}/bin")
set(EXECUTABLE_OUTPUT_PATH                     "${PROJECT_BINARY_DIR}/bin")
set(CMAKE_MODULE_PATH                          ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake/Modules/")

set(CMAKE_BUILD_RPATH_USE_ORIGIN               TRUE)
set(CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH     TRUE)
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH          FALSE)
set(CMAKE_INSTALL_RPATH                        "\$ORIGIN")

enable_testing()

add_subdirectory(lib)
add_subdirectory(sample)
add_subdirectory(test)
